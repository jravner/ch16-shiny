"Markdown", "R", "code_exp", "countries_visited", "wash_born",
"num_sibs", "height_inch", "dog_cat", "hawks_fan"))
colnames(db) <- c("class", "doing_major", "OS", "command_line", "version_control",
"Markdown", "R", "code_exp", "countries_visited", "wash_born",
"num_sibs", "height_inch", "dog_cat", "hawks_fan")
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman",
dataset$class == "Sophomore",
dataset$class == "Junior",
dataset$class == "Senior"))
}
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
}
list_summary(db)
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret
}
list_summary(db)
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
ret$os_count <- list(PC = sum(datase$OS == "Windows"),
Mac = sum(dataset$OS == "Mac"),
Other = sum(dataset$OS != "Windows" &
dataset$OS != "Mac"))
ret
}
results <- list_summary(db)
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
ret$os_count <- list(PC = sum(dataset$OS == "Windows"),
Mac = sum(dataset$OS == "Mac"),
Other = sum(dataset$OS != "Windows" &
dataset$OS != "Mac"))
ret
}
results <- list_summary(db)
data.frame(respones = c("Never used it", "Have used it a few times",
"Intermediate user", "Expert user"),
command_line = c(sum(db$command_line == "Never used it"),
sum(db$command_line == "Have used it a few times"),
sum(db$command_line == "Intermediate user"),
sum(db$command_line == "Expert user")
)
)
test <- data.frame(respones = c("Never used it", "Have used it a few times",
"Intermediate user", "Expert user"),
command_line = c(sum(db$command_line == "Never used it"),
sum(db$command_line == "Have used it a few times"),
sum(db$command_line == "Intermediate user"),
sum(db$command_line == "Expert user")
)
)
View(test)
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
ret$os_count <- list(PC = sum(dataset$OS == "Windows"),
Mac = sum(dataset$OS == "Mac"),
Other = sum(dataset$OS != "Windows" &
dataset$OS != "Mac"))
ret$code_numbers <- data.frame(
respones = c("Never used it", "Have used it a few times",
"Intermediate user", "Expert user"),
command_line = c(sum(dataset$command_line == "Never used it"),
sum(dataset$command_line == "Have used it a few times"),
sum(dataset$command_line == "Intermediate user"),
sum(dataset$command_line == "Expert user")),
version_control = c(sum(dataset$version_control == "Never used it"),
sum(dataset$version_control == "Have used it a few times"),
sum(dataset$version_control == "Intermediate user"),
sum(dataset$version_control == "Expert user")),
Markdown = c(sum(dataset$Markdown == "Never used it"),
sum(dataset$Markdown == "Have used it a few times"),
sum(dataset$Markdown == "Intermediate user"),
sum(dataset$Markdown == "Expert user")),
R = c(sum(dataset$R == "Never used it"),
sum(dataset$R == "Have used it a few times"),
sum(dataset$R == "Intermediate user"),
sum(dataset$R == "Expert user"))
)
ret
}
results <- list_summary(db)
results$code_numbers
db$num_sibs * db$num_sibs
colnames(db) <- c("class", "doing_major", "OS", "command_line",
"version_control", "Markdown", "R", "code_exp",
"countries", "wash_born", "num_sibs", "height_inch",
"dog_cat", "hawks_fan")
k <- db$num_sibs
db$num_sibs * db$num_sibs
k * k
sqrt(25)
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
ret$os_count <- list(PC = sum(dataset$OS == "Windows"),
Mac = sum(dataset$OS == "Mac"),
Other = sum(dataset$OS != "Windows" &
dataset$OS != "Mac"))
ret$code_numbers <- data.frame(
respones = c("Never used it", "Have used it a few times",
"Intermediate user", "Expert user"),
command_line = c(sum(dataset$command_line == "Never used it"),
sum(dataset$command_line == "Have used it a few times"),
sum(dataset$command_line == "Intermediate user"),
sum(dataset$command_line == "Expert user")),
version_control = c(sum(dataset$version_control == "Never used it"),
sum(dataset$version_control == "Have used it a few times"),
sum(dataset$version_control == "Intermediate user"),
sum(dataset$version_control == "Expert user")),
Markdown = c(sum(dataset$Markdown == "Never used it"),
sum(dataset$Markdown == "Have used it a few times"),
sum(dataset$Markdown == "Intermediate user"),
sum(dataset$Markdown == "Expert user")),
R = c(sum(dataset$R == "Never used it"),
sum(dataset$R == "Have used it a few times"),
sum(dataset$R == "Intermediate user"),
sum(dataset$R == "Expert user"))
)
ret$NFL_homers <- sum(dataset$hawks_fan == "Yes" &
dataset$wash_born == "Yes")
x <- dataset$countries
y <- dataset$num_sibs
n <- nrow(dataset)
ret$countries_vs_sib <- list(mean_countries <- mean(dataset$countries),
mean_siblings <- mean(dataset$num_sibs),
correlation <- (n * sum(x * y) -
(sum(x) * sum(y)) /
sqrt((n * sum(x * x) -
sum(x * x)) *
(n * sum(y * y) -
sum(y * y)))
)
)
}
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
ret$os_count <- list(PC = sum(dataset$OS == "Windows"),
Mac = sum(dataset$OS == "Mac"),
Other = sum(dataset$OS != "Windows" &
dataset$OS != "Mac"))
ret$code_numbers <- data.frame(
respones = c("Never used it", "Have used it a few times",
"Intermediate user", "Expert user"),
command_line = c(sum(dataset$command_line == "Never used it"),
sum(dataset$command_line == "Have used it a few times"),
sum(dataset$command_line == "Intermediate user"),
sum(dataset$command_line == "Expert user")),
version_control = c(sum(dataset$version_control == "Never used it"),
sum(dataset$version_control == "Have used it a few times"),
sum(dataset$version_control == "Intermediate user"),
sum(dataset$version_control == "Expert user")),
Markdown = c(sum(dataset$Markdown == "Never used it"),
sum(dataset$Markdown == "Have used it a few times"),
sum(dataset$Markdown == "Intermediate user"),
sum(dataset$Markdown == "Expert user")),
R = c(sum(dataset$R == "Never used it"),
sum(dataset$R == "Have used it a few times"),
sum(dataset$R == "Intermediate user"),
sum(dataset$R == "Expert user"))
)
ret$NFL_homers <- sum(dataset$hawks_fan == "Yes" &
dataset$wash_born == "Yes")
x <- dataset$countries
y <- dataset$num_sibs
n <- nrow(dataset)
ret$countries_vs_sib <- list(mean_countries <- mean(dataset$countries),
mean_siblings <- mean(dataset$num_sibs),
correlation <- (n * sum(x * y) -
(sum(x) * sum(y)) /
sqrt((n * sum(x * x) -
sum(x * x)) *
(n * sum(y * y) -
sum(y * y)))
)
)
ret
}
results <- list_summary(db)
View(results)
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
ret$os_count <- list(PC = sum(dataset$OS == "Windows"),
Mac = sum(dataset$OS == "Mac"),
Other = sum(dataset$OS != "Windows" &
dataset$OS != "Mac"))
ret$code_numbers <- data.frame(
respones = c("Never used it", "Have used it a few times",
"Intermediate user", "Expert user"),
command_line = c(sum(dataset$command_line == "Never used it"),
sum(dataset$command_line == "Have used it a few times"),
sum(dataset$command_line == "Intermediate user"),
sum(dataset$command_line == "Expert user")),
version_control = c(sum(dataset$version_control == "Never used it"),
sum(dataset$version_control == "Have used it a few times"),
sum(dataset$version_control == "Intermediate user"),
sum(dataset$version_control == "Expert user")),
Markdown = c(sum(dataset$Markdown == "Never used it"),
sum(dataset$Markdown == "Have used it a few times"),
sum(dataset$Markdown == "Intermediate user"),
sum(dataset$Markdown == "Expert user")),
R = c(sum(dataset$R == "Never used it"),
sum(dataset$R == "Have used it a few times"),
sum(dataset$R == "Intermediate user"),
sum(dataset$R == "Expert user"))
)
ret$NFL_homers <- sum(dataset$hawks_fan == "Yes" &
dataset$wash_born == "Yes")
x <- dataset$countries
y <- dataset$num_sibs
n <- nrow(dataset)
ret$countries_vs_sib <- list(mean_countries = mean(dataset$countries),
mean_siblings = mean(dataset$num_sibs),
correlation = (n * sum(x * y) -
(sum(x) * sum(y)) /
sqrt((n * sum(x * x) -
sum(x * x)) *
(n * sum(y * y) -
sum(y * y)))
)
)
ret
}
results <- list_summary(db)
results$countries_vs_sib
sum(db$num_sibs)
db$num_sibs
db <- sub(NA, 0, db)
db$num_sibs
db <- sub("NA", 0, db)
db$num_sibs
# Load in data
db <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
colnames(db) <- c("class", "doing_major", "OS", "command_line",
"version_control", "Markdown", "R", "code_exp",
"countries", "wash_born", "num_sibs", "height_inch",
"dog_cat", "hawks_fan")
db$num_sibs[101]
db$num_sibs[102]
db$num_sibs[100]
db$num_sibs[100] <- 0
db$num_sibs[100]
results <- list_summary(db)
db$num_sibs
db$num_sibs * db$num_sibs
x <- dataset$countries
x <- db$countries
y <- db$num_sibs
n <- nrow(db)
mean_countries = mean(x)
mean(x)
mean(y)
(n * sum(x * y) -
(sum(x) * sum(y)) /
sqrt((n * sum(x * x) -
sum(x * x)) *
(n * sum(y * y) -
sum(y * y)))
)
(((n * sum(x * y)) - (sum(x) * sum(y))) /
sqrt(((n * sum(x * x)) - sum(x * x)) *
((n * sum(y * y)) - sum(y * y))))
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
ret$os_count <- list(PC = sum(dataset$OS == "Windows"),
Mac = sum(dataset$OS == "Mac"),
Other = sum(dataset$OS != "Windows" &
dataset$OS != "Mac"))
ret$code_numbers <- data.frame(
respones = c("Never used it", "Have used it a few times",
"Intermediate user", "Expert user"),
command_line = c(sum(dataset$command_line == "Never used it"),
sum(dataset$command_line == "Have used it a few times"),
sum(dataset$command_line == "Intermediate user"),
sum(dataset$command_line == "Expert user")),
version_control = c(sum(dataset$version_control == "Never used it"),
sum(dataset$version_control == "Have used it a few times"),
sum(dataset$version_control == "Intermediate user"),
sum(dataset$version_control == "Expert user")),
Markdown = c(sum(dataset$Markdown == "Never used it"),
sum(dataset$Markdown == "Have used it a few times"),
sum(dataset$Markdown == "Intermediate user"),
sum(dataset$Markdown == "Expert user")),
R = c(sum(dataset$R == "Never used it"),
sum(dataset$R == "Have used it a few times"),
sum(dataset$R == "Intermediate user"),
sum(dataset$R == "Expert user"))
)
ret$NFL_homers <- sum(dataset$hawks_fan == "Yes" &
dataset$wash_born == "Yes")
x <- dataset$countries
y <- dataset$num_sibs
n <- nrow(dataset)
ret$countries_vs_sib <- list(mean_countries = mean(x),
mean_siblings = mean(y),
correlation =
(((n * sum(x * y)) - (sum(x) * sum(y))) /
sqrt(((n * sum(x * x)) - sum(x * x)) *
((n * sum(y * y)) - sum(y * y))))
)
ret
}
results <- list_summary(db)
results <- list_summary(db)
# Load in data
db <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
colnames(db) <- c("class", "doing_major", "OS", "command_line",
"version_control", "Markdown", "R", "code_exp",
"countries", "wash_born", "num_sibs", "height_inch",
"dog_cat", "hawks_fan")
db$num_sibs[100] <- 0
results <- list_summary(db)
mean(y)
# Funtion that takes in the database and calculates severat statistics
list_summary <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
ret$class_count <- list(Freshman = sum(dataset$class == "Freshman"),
Sophomore = sum(dataset$class == "Sophomore"),
Junior = sum(dataset$class == "Junior"),
Senior = sum(dataset$class == "Senior"))
ret$num_info_majors <- sum(dataset$doing_major == "Yes")
ret$os_count <- list(PC = sum(dataset$OS == "Windows"),
Mac = sum(dataset$OS == "Mac"),
Other = sum(dataset$OS != "Windows" &
dataset$OS != "Mac"))
ret$code_numbers <- data.frame(
respones = c("Never used it", "Have used it a few times",
"Intermediate user", "Expert user"),
command_line = c(sum(dataset$command_line == "Never used it"),
sum(dataset$command_line == "Have used it a few times"),
sum(dataset$command_line == "Intermediate user"),
sum(dataset$command_line == "Expert user")),
version_control = c(sum(dataset$version_control == "Never used it"),
sum(dataset$version_control == "Have used it a few times"),
sum(dataset$version_control == "Intermediate user"),
sum(dataset$version_control == "Expert user")),
Markdown = c(sum(dataset$Markdown == "Never used it"),
sum(dataset$Markdown == "Have used it a few times"),
sum(dataset$Markdown == "Intermediate user"),
sum(dataset$Markdown == "Expert user")),
R = c(sum(dataset$R == "Never used it"),
sum(dataset$R == "Have used it a few times"),
sum(dataset$R == "Intermediate user"),
sum(dataset$R == "Expert user"))
)
ret$NFL_homers <- sum(dataset$hawks_fan == "Yes" &
dataset$wash_born == "Yes")
x <- dataset$countries
y <- dataset$num_sibs
n <- nrow(dataset)
ret$countries_vs_sib <- list(mean_countries = mean(x),
mean_siblings = mean(y),
correlation =
(((n * sum(x * y)) - (sum(x) * sum(y))) /
sqrt(((n * sum(x * x)) - sum(x * x)) *
((n * sum(y * y)) - sum(y * y))))
)
ret
}
results <- list_summary(db)
View(results)
library(shiny)
ui <- fluidPage(
# A top level header: "First Shiny Website"
h1("First Shiny Website"),
# A Paragraph, describing your excitement: include some `strong` text
p("I am very excited to be", strong("BUILDING"), "app with Shiny!"),
# An image with this `src`
# https://media2.giphy.com/media/l3q2Ip7FrmPE33EiI/giphy.gif
img("Sienfeld Image",
src = "https://media2.giphy.com/media/l3q2Ip7FrmPE33EiI/giphy.gif"),
# Another paragraph about a slider: include some `em` text
p("Here we are going to make some", em("sliders.")),
# A slider with an appropriate label, min of 10, max of 100, value of 50
sliderInput("slider", label = h3("Slide, baby, Slide"), min = 10, max = 100,
value = 50),
)
ui <- fluidPage(
# A top level header: "First Shiny Website"
h1("First Shiny Website"),
# A Paragraph, describing your excitement: include some `strong` text
p("I am very excited to be", strong("BUILDING"), "app with Shiny!"),
# An image with this `src`
# https://media2.giphy.com/media/l3q2Ip7FrmPE33EiI/giphy.gif
img("Sienfeld Image",
src = "https://media2.giphy.com/media/l3q2Ip7FrmPE33EiI/giphy.gif"),
# Another paragraph about a slider: include some `em` text
p("Here we are going to make some", em("sliders.")),
# A slider with an appropriate label, min of 10, max of 100, value of 50
sliderInput("slider", label = h3("Slide, baby, Slide"), min = 10, max = 100,
value = 50)
)
ui <- fluidPage(
# A top level header: "First Shiny Website"
h1("First Shiny Website"),
# A Paragraph, describing your excitement: include some `strong` text
p("I am very excited to be", strong("BUILDING"), "app with Shiny!"),
# An image with this `src`
# https://media2.giphy.com/media/l3q2Ip7FrmPE33EiI/giphy.gif
img("Sienfeld Image",
src = "https://media2.giphy.com/media/l3q2Ip7FrmPE33EiI/giphy.gif"),
# Another paragraph about a slider: include some `em` text
p("Here we are going to make some", em("sliders.")),
# A slider with an appropriate label, min of 10, max of 100, value of 50
sliderInput("slider", label = h3("Slide, baby, Slide"), min = 10, max = 100,
value = 50)
)
# Define a `server` function that accepts an input and an output
# At this point, don't do anything in the function
# This function should perform the following:
server <- function(input, output){
}
# Create a new `shinyApp()` using the above ui and server
Lit <- shinyApp(ui, server)
runApp('D:/classes/INFO 201/ch16-shiny/exercise-1')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-1')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-1')
setwd("D:/classes/INFO 201/ch16-shiny/exercise-1")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Install and load the `shiny` package
library(shiny)
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
# Install and load the `shiny` package
library(shiny)
runApp()
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
runApp('D:/classes/INFO 201/ch16-shiny/exercise-2')
